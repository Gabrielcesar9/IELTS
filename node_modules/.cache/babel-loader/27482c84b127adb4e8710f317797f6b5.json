{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Documents\\\\IELTS_Academic\\\\src\\\\components\\\\EmailForm\\\\EmailForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport validator from 'validator';\nimport { Redirect } from 'react-router-dom';\n\nconst EmailForm = () => {\n  _s();\n\n  const [nice, setNice] = useState(false);\n\n  window.onbeforeunload = () => {\n    alert('Your work will be lost');\n  };\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  var Dones = {\n    reading: false,\n    listening: false,\n    writing: false,\n    answers_reading: [],\n    answers_listening: [],\n    answers_writing: []\n  };\n\n  const onSubmit = data => {\n    if (validator.isEmail(data.email)) {\n      alert(\"Nice Email\");\n      Dones.email = data.email;\n      console.log('FormEmail', Dones);\n      setNice(true); //history.push({pathname:props.path,Dones})\n    } else {\n      alert(\"Please provide a valid E-mail\");\n      setNice(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    style: {\n      width: '80%',\n      background: 'white',\n      border: 'solid gray',\n      display: 'inline'\n    },\n    className: \"email\",\n    placeholder: \"E-mail\"\n  }, register(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    style: {\n      width: 'fit-content',\n      padding: '3%',\n      float: 'right'\n    },\n    className: \"confirm\",\n    value: \"Confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))), nice ? /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/Home/ChooseTest',\n      Dones\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }) : console.log('nice', nice));\n};\n\n_s(EmailForm, \"y6IzfgB26fdK6rNTKOPH1npxpJI=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["C:/Users/Gabriel/Documents/IELTS_Academic/src/components/EmailForm/EmailForm.js"],"names":["React","useEffect","useState","useHistory","useForm","validator","Redirect","EmailForm","nice","setNice","window","onbeforeunload","alert","history","register","handleSubmit","formState","errors","Dones","reading","listening","writing","answers_reading","answers_listening","answers_writing","onSubmit","data","isEmail","email","console","log","width","background","border","display","padding","float","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport validator from 'validator'\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\nconst EmailForm = ()=>{\r\n    const [nice, setNice] = useState(false)\r\n    window.onbeforeunload = () =>{alert('Your work will be lost')}\r\n    const history = useHistory();\r\n    const {register, handleSubmit, formState: {errors}} = useForm();\r\n    var Dones = {\r\n        reading:false,\r\n        listening:false,\r\n        writing:false,\r\n        answers_reading:[],\r\n        answers_listening:[],\r\n        answers_writing:[],}\r\n    \r\n    const onSubmit = data => {\r\n        if(validator.isEmail(data.email)){alert(\"Nice Email\");\r\n        Dones.email = data.email;\r\n        console.log('FormEmail',Dones)\r\n        setNice(true)\r\n         //history.push({pathname:props.path,Dones})\r\n        }\r\n        else{alert(\"Please provide a valid E-mail\");setNice(false)}    \r\n    }\r\n    return(\r\n        <div>\r\n            <div className='background'></div>\r\n            <div className=\"login\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input type=\"text\" style={{width:'80%', background:'white', border:'solid gray', display:'inline'}} className = \"email\" placeholder='E-mail' {...register(\"email\")} />\r\n                    <input type=\"submit\" style={{width:'fit-content', padding:'3%', float:'right',}} className=\"confirm\" value={\"Confirm\"}/>\r\n                </form>\r\n            </div>\r\n        {nice?<Redirect to={{pathname: '/Home/ChooseTest', Dones}}/>:console.log('nice',nice)}\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n            \r\n    )\r\n\r\n}\r\n\r\nexport default EmailForm"]},"metadata":{},"sourceType":"module"}