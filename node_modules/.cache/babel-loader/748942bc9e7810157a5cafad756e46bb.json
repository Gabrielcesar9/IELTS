{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Documents\\\\IELTS_Academic\\\\src\\\\components\\\\EmailForm\\\\EmailForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport validator from 'validator';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateEmail } from '../../actions';\n\nconst EmailForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let email = useSelector(state => state.Email);\n\n  const onSubmit = data => {\n    if (validator.isEmail(data)) {\n      alert(\"Nice Email\");\n      dispatch(updateEmail(data.email));\n      console.log('EMAIILL', email); //history.push({pathname:props.path,Dones})\n    } else {\n      alert(\"Please provide a valid E-mail\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    style: {\n      width: '80%',\n      background: 'white',\n      border: 'solid gray',\n      display: 'inline'\n    },\n    className: \"email\",\n    placeholder: \"E-mail\"\n  }, register(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    style: {\n      width: 'fit-content',\n      padding: '3%',\n      float: 'right'\n    },\n    className: \"confirm\",\n    value: \"Confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }))), useSelector(state => state.Email) ? /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/Home/ChooseTest'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }) : console.log('not email yet'));\n};\n\n_s(EmailForm, \"Jz7V50ppK6FoEDImLu9h2DpSUPQ=\", false, function () {\n  return [useDispatch, useHistory, useForm, useSelector, useSelector];\n});\n\n_c = EmailForm;\nexport default EmailForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"sources":["C:/Users/Gabriel/Documents/IELTS_Academic/src/components/EmailForm/EmailForm.js"],"names":["React","useEffect","useState","useHistory","useForm","validator","Redirect","useSelector","useDispatch","updateEmail","EmailForm","dispatch","history","register","handleSubmit","formState","errors","email","state","Email","onSubmit","data","isEmail","alert","console","log","width","background","border","display","padding","float","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAUC,QAAV,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,SAAS,GAAG,MAAI;AAAA;;AAClB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM;AAACU,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAApC,MAAgDZ,OAAO,EAA7D;AACA,MAAIa,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,KAAd,CAAvB;;AACA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACrB,QAAGhB,SAAS,CAACiB,OAAV,CAAkBD,IAAlB,CAAH,EAA2B;AAACE,MAAAA,KAAK,CAAC,YAAD,CAAL;AACxBZ,MAAAA,QAAQ,CAACF,WAAW,CAACY,IAAI,CAACJ,KAAN,CAAZ,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,KAAvB,EAFuB,CAG1B;AACA,KAJD,MAKI;AAACM,MAAAA,KAAK,CAAC,+BAAD,CAAL;AAAwC;AAChD,GAPD;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAET,YAAY,CAACM,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,UAAU,EAAC,OAAzB;AAAkCC,MAAAA,MAAM,EAAC,YAAzC;AAAuDC,MAAAA,OAAO,EAAC;AAA/D,KAA1B;AAAoG,IAAA,SAAS,EAAG,OAAhH;AAAwH,IAAA,WAAW,EAAC;AAApI,KAAiJhB,QAAQ,CAAC,OAAD,CAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACa,MAAAA,KAAK,EAAC,aAAP;AAAsBI,MAAAA,OAAO,EAAC,IAA9B;AAAoCC,MAAAA,KAAK,EAAC;AAA1C,KAA5B;AAAiF,IAAA,SAAS,EAAC,SAA3F;AAAqG,IAAA,KAAK,EAAE,SAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFJ,EAQCxB,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,KAAd,CAAX,gBAAgC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAACa,MAAAA,QAAQ,EAAE;AAAX,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,GAAgFR,OAAO,CAACC,GAAR,CAAY,eAAZ,CARjF,CADJ;AAmBH,CAhCD;;GAAMf,S;UACeF,W,EACDL,U,EACsCC,O,EAC1CG,W,EAkBPA,W;;;KAtBHG,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport validator from 'validator'\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateEmail } from '../../actions'\r\n\r\nconst EmailForm = ()=>{\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {register, handleSubmit, formState: {errors}} = useForm();\r\n    let email = useSelector(state=>state.Email)\r\n    const onSubmit = data => {\r\n        if(validator.isEmail(data)){alert(\"Nice Email\");\r\n            dispatch(updateEmail(data.email))\r\n            console.log('EMAIILL', email)\r\n         //history.push({pathname:props.path,Dones})\r\n        }\r\n        else{alert(\"Please provide a valid E-mail\");}    \r\n    }\r\n    return(\r\n        <div>\r\n            <div className='background'></div>\r\n            <div className=\"login\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input type=\"text\" style={{width:'80%', background:'white', border:'solid gray', display:'inline'}} className = \"email\" placeholder='E-mail' {...register(\"email\")} />\r\n                    <input type=\"submit\" style={{width:'fit-content', padding:'3%', float:'right',}} className=\"confirm\" value={\"Confirm\"}/>\r\n                </form>\r\n            </div>\r\n        {useSelector(state=>state.Email)?<Redirect to={{pathname: '/Home/ChooseTest'}}/>:console.log('not email yet')}\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n            \r\n    )\r\n\r\n}\r\n\r\nexport default EmailForm"]},"metadata":{},"sourceType":"module"}